/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */options{  static = true;}PARSER_BEGIN(PhysParser)
import java.util.*;
import java.io.*;
public class PhysParser{  public static void main(String args []) throws ParseException  {
    try    {          PhysParser parser;

    HashMap map = new HashMap();	
	boolean func = true;
	
    if (args.length == 0)
    	parser = new PhysParser (System.in);
    else
    	parser = new PhysParser (new java.io.FileInputStream(args[0]));

	while (func)
		func = parser.input(map);
    }
    
    catch (Throwable e)
    {
     System.out.println(e.getMessage());
    }
    }}PARSER_END(PhysParser)SKIP :{  " "| "\r"| "\t"| "\n"}TOKEN : /* OPERATORS */{  < PLUS : "+" >| < MINUS : "-" >| < MULTIPLY : "*" >| < DIVIDE : "/" >}TOKEN :{  < CONSTANT : (< DIGIT >)+ >| < #DIGIT : [ "0"-"9" ] >}int one_line() :{}{  sum() ";"  {    return 0;  }| ";"  {    return 1;  }}void sum() :{}{  term()  (    (      < PLUS >    | < MINUS >    )    term()  )*}void term() :{}{  unary()  (    (      < MULTIPLY >    | < DIVIDE >    )    unary()  )*}void unary() :{}{  < MINUS > element()| element()}void element() :{}{  < CONSTANT >| "(" sum() ")"}
